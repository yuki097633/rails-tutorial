{"filter":false,"title":"users_signup_test.rb","tooltip":"/sample_app/test/integration/users_signup_test.rb","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":6,"column":5},"action":"insert","lines":["  def setup","    ActionMailer::Base.deliveries.clear","  end"],"id":3}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":36},"action":"remove","lines":["  test \"valid signup information\" do"],"id":4},{"start":{"row":19,"column":0},"end":{"row":19,"column":60},"action":"insert","lines":["  test \"valid signup information with account activation\" do"]}],[{"start":{"row":27,"column":0},"end":{"row":29,"column":25},"action":"remove","lines":["    follow_redirect!","    #assert_template 'users/show'","    #assert is_logged_in?"],"id":5},{"start":{"row":27,"column":0},"end":{"row":44,"column":24},"action":"insert","lines":["    assert_equal 1, ActionMailer::Base.deliveries.size","    user = assigns(:user)","    assert_not user.activated?","    # 有効化していない状態でログインしてみる","    log_in_as(user)","    assert_not is_logged_in?","    # 有効化トークンが不正な場合","    get edit_account_activation_path(\"invalid token\", email: user.email)","    assert_not is_logged_in?","    # トークンは正しいがメールアドレスが無効な場合","    get edit_account_activation_path(user.activation_token, email: 'wrong')","    assert_not is_logged_in?","    # 有効化トークンが正しい場合","    get edit_account_activation_path(user.activation_token, email: user.email)","    assert user.reload.activated?","    follow_redirect!","    assert_template 'users/show'","    assert is_logged_in?"]}],[{"start":{"row":27,"column":54},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]},{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"insert","lines":["#"]}],[{"start":{"row":28,"column":5},"end":{"row":28,"column":6},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":28,"column":6},"end":{"row":28,"column":10},"action":"insert","lines":["その時に"],"id":8}],[{"start":{"row":28,"column":10},"end":{"row":28,"column":15},"action":"insert","lines":["使用できる"],"id":9}],[{"start":{"row":28,"column":15},"end":{"row":28,"column":24},"action":"insert","lines":["インスタンス変数を"],"id":10}],[{"start":{"row":28,"column":24},"end":{"row":28,"column":28},"action":"insert","lines":["取得する"],"id":11}],[{"start":{"row":19,"column":0},"end":{"row":46,"column":5},"action":"remove","lines":["  test \"valid signup information with account activation\" do","    get signup_path","    assert_difference 'User.count', 1 do","      post users_path, params: { user: { name:  \"Example User\",","                                         email: \"user@example.com\",","                                         password:              \"password\",","                                         password_confirmation: \"password\" } }","    end","    assert_equal 1, ActionMailer::Base.deliveries.size","    # その時に使用できるインスタンス変数を取得する","    user = assigns(:user)","    assert_not user.activated?","    # 有効化していない状態でログインしてみる","    log_in_as(user)","    assert_not is_logged_in?","    # 有効化トークンが不正な場合","    get edit_account_activation_path(\"invalid token\", email: user.email)","    assert_not is_logged_in?","    # トークンは正しいがメールアドレスが無効な場合","    get edit_account_activation_path(user.activation_token, email: 'wrong')","    assert_not is_logged_in?","    # 有効化トークンが正しい場合","    get edit_account_activation_path(user.activation_token, email: user.email)","    assert user.reload.activated?","    follow_redirect!","    assert_template 'users/show'","    assert is_logged_in?","  end"],"id":12},{"start":{"row":19,"column":0},"end":{"row":45,"column":5},"action":"insert","lines":["  test \"valid signup information with account activation\" do","    get signup_path","    assert_difference 'User.count', 1 do","      post users_path, params: { user: { name:  \"Example User\",","                                         email: \"user@example.com\",","                                         password:              \"password\",","                                         password_confirmation: \"password\" } }","    end","    assert_equal 1, ActionMailer::Base.deliveries.size","    user = assigns(:user)","    assert_not user.activated?","    # 有効化していない状態でログインしてみる","    log_in_as(user)","    assert_not is_logged_in?","    # 有効化トークンが不正な場合","    get edit_account_activation_path(\"invalid token\", email: user.email)","    assert_not is_logged_in?","    # トークンは正しいがメールアドレスが無効な場合","    get edit_account_activation_path(user.activation_token, email: 'wrong')","    assert_not is_logged_in?","    # 有効化トークンが正しい場合","    get edit_account_activation_path(user.activation_token, email: user.email)","    assert user.reload.activated?","    follow_redirect!","    assert_template 'users/show'","    assert is_logged_in?","  end"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":45,"column":5},"end":{"row":45,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1575466832985,"hash":"57dc87abd86bab89692e0654b17b6a4f9d996012"}