{"filter":false,"title":"following_test.rb","tooltip":"/sample_app/test/integration/following_test.rb","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["require 'test_helper'","","class FollowingTest < ActionDispatch::IntegrationTest","  # test \"the truth\" do","  #   assert true","  # end","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":26,"column":3},"action":"insert","lines":["require 'test_helper'","","class FollowingTest < ActionDispatch::IntegrationTest","","  def setup","    @user = users(:michael)","    log_in_as(@user)","  end","","  test \"following page\" do","    get following_user_path(@user)","    assert_not @user.following.empty?","    assert_match @user.following.count.to_s, response.body","    @user.following.each do |user|","      assert_select \"a[href=?]\", user_path(user)","    end","  end","","  test \"followers page\" do","    get followers_user_path(@user)","    assert_not @user.followers.empty?","    assert_match @user.followers.count.to_s, response.body","    @user.followers.each do |user|","      assert_select \"a[href=?]\", user_path(user)","    end","  end","end"]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":27},"action":"insert","lines":["    @other = users(:archer)"],"id":4}],[{"start":{"row":10,"column":0},"end":{"row":26,"column":5},"action":"remove","lines":["  test \"following page\" do","    get following_user_path(@user)","    assert_not @user.following.empty?","    assert_match @user.following.count.to_s, response.body","    @user.following.each do |user|","      assert_select \"a[href=?]\", user_path(user)","    end","  end","","  test \"followers page\" do","    get followers_user_path(@user)","    assert_not @user.followers.empty?","    assert_match @user.followers.count.to_s, response.body","    @user.followers.each do |user|","      assert_select \"a[href=?]\", user_path(user)","    end","  end"],"id":5},{"start":{"row":10,"column":0},"end":{"row":36,"column":5},"action":"insert","lines":["  test \"should follow a user the standard way\" do","    assert_difference '@user.following.count', 1 do","      post relationships_path, params: { followed_id: @other.id }","    end","  end","","  test \"should follow a user with Ajax\" do","    assert_difference '@user.following.count', 1 do","      post relationships_path, xhr: true, params: { followed_id: @other.id }","    end","  end","","  test \"should unfollow a user the standard way\" do","    @user.follow(@other)","    relationship = @user.active_relationships.find_by(followed_id: @other.id)","    assert_difference '@user.following.count', -1 do","      delete relationship_path(relationship)","    end","  end","","  test \"should unfollow a user with Ajax\" do","    @user.follow(@other)","    relationship = @user.active_relationships.find_by(followed_id: @other.id)","    assert_difference '@user.following.count', -1 do","      delete relationship_path(relationship), xhr: true","    end","  end"]}]]},"ace":{"folds":[],"scrolltop":132,"scrollleft":0,"selection":{"start":{"row":36,"column":5},"end":{"row":36,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1575984580875,"hash":"8a9fb7e8d76c45be0c2a69ca085635a80cfe2a0f"}